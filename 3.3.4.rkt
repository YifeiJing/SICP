#lang sicp
(define (half-adder a b s c)
  (let ((s1 (make-wire))
        (s2 (make-wire))
        (a1 (make-wire))
        (a2 (make-wire)))
    (inverter a s1)
    (inverter b s2)
    (and-gate s1 b a1)
    (and-gare a s2 a2)
    (or-gate a1 a2 s)
    (or-gate a b c))'ok)
(define (full-adder a b c-in sum c-out)
  (let ((s (make-wire)) (c1 (make-wire)) (c2 (make-wire)))
    (half-adder b c-in s c1)
    (half-adder a s sum c2)
    (or-gate c1 c2 c-out)
    'ok))
