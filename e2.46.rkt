#lang sicp
(define (make-vect x y)
  (cons x y))
(define (xcor-vect v)
  (car v))
(define (ycor-vect v)
  (cdr v))
(define (op-vect f)
  (lambda (v w)
    (cons (f (car v) (car w)) (f (cdr v) (cdr w)))))
(define add-vect (op-vect +))
(define sub-vect (op-vect -))
(define (scale-vect c v)
  (cons (* c (car v)) (* c (cdr v))))
