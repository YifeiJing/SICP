#lang sicp
(define (ordered-triples n s)
  (define (equal-to-s? pair)
    (= s (+ (car pair) (cadr pair) (cadr (cdr pair)))))
  (define (unique-triple-pairs bound)
    (accumulate append nil
                (map (lambda (x)
                       (map (lambda (y)
  (filter equal-to-s?
          (unique-triple-pairs n)))